/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
    ? { [P in keyof T]?: RecursivePartialNull<T[P]> }
    : T | null;

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}

export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export interface ActionButton {
  label: string
  action_type: string
  parameters: string
  priority: string
  
}

export interface AutoInsightsResponse {
  executive_summary: string
  top_opportunities: OpportunityRecommendation[]
  critical_insights: ExecutiveInsight[]
  persona_analysis: PersonaAnalysis[]
  competitive_considerations: string[]
  immediate_actions: ActionButton[]
  strategic_recommendations: string[]
  
}

export interface ExecutiveInsight {
  title: string
  insight: string
  evidence: string[]
  business_impact: string
  impact_level: string
  confidence_level: string
  personas_affected: string[]
  recommended_actions: ActionButton[]
  category: string
  
}

export interface ExtractedInsight {
  name: string
  details?: string | null
  pain?: string | null
  desiredOutcome?: string | null
  evidence?: string | null
  emotionalResponse?: string | null
  underlyingMotivation?: string | null
  category: string
  journeyStage: string
  impact?: number | null
  novelty?: number | null
  jtbd?: string | null
  confidence?: number | null
  contradictions?: string | null
  relatedTags: string[]
  createdAt?: string | null
  
  [key: string]: any;
}

export interface InterviewExtraction {
  metadata: InterviewMetadata
  interviewee: Interviewee
  insights: ExtractedInsight[]
  observationsAndNotes: string
  highImpactThemes: string[]
  openQuestionsAndNextSteps: string
  
}

export interface InterviewMetadata {
  title: string
  date?: string | null
  interviewer?: string | null
  durationMin?: number | null
  
}

export interface Interviewee {
  name?: string | null
  persona?: string | null
  participantDescription?: string | null
  segment?: string | null
  contactInfo?: string | null
  
}

export interface OpportunityRecommendation {
  title: string
  description: string
  revenue_potential: string
  effort_estimate: string
  target_personas: string[]
  supporting_insights: string[]
  competitive_advantage: string
  recommended_actions: ActionButton[]
  
}

export interface Persona {
  name: string
  description?: string | null
  age?: string | null
  gender?: string | null
  location?: string | null
  education?: string | null
  occupation?: string | null
  income?: string | null
  languages?: string | null
  segment?: string | null
  role?: string | null
  color_hex?: string | null
  image_url?: string | null
  motivations?: string[] | null
  values?: string[] | null
  frustrations?: string[] | null
  preferences?: string | null
  learning_style?: string | null
  tech_comfort_level?: string | null
  frequency_of_purchase?: string | null
  frequency_of_use?: string | null
  key_tasks?: string[] | null
  tools_used?: string[] | null
  primary_goal?: string | null
  secondary_goals?: string[] | null
  sources?: string[] | null
  quotes?: string[] | null
  percentage?: number | null
  
}

export interface PersonaAnalysis {
  persona_name: string
  key_pain_points: string[]
  unmet_needs: string[]
  revenue_potential: string
  willingness_to_pay: string
  recommended_solutions: string[]
  competitive_threats: string[]
  
}

export interface Set {
  name: string
  description: string
  members: SetRecord[]
  
}

export interface SetRecord {
  term: string
  definition: string
  
}
