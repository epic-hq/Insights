name: 🚀 Validation Pipeline
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  actions: write
  contents: read
  # Required to put a comment into the pull-request
  pull-requests: write
jobs:
  lint:
    name: ⬣ Biome lint
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip lint]') }}
    steps:
     - uses: actions/checkout@v4
     - uses: biomejs/setup-biome@v2
     - run: biome ci . --reporter=github --error-on-warnings=false || true

  typecheck:
    name: 🔎 Type check
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip typecheck]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
      - uses: pnpm/action-setup@v4
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm run typecheck

  check-unused:
    name: ✂️ Check unused code
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip unused]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
      - uses: pnpm/action-setup@v4
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm run check:unused

  vitest:
    needs: [lint, typecheck]
    name: ⚡ Unit Tests
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip test]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
      - uses: pnpm/action-setup@v4
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm exec playwright install chromium --with-deps
      - run: pnpm run test:cov
      - name: "Report Coverage"
        # Only works if you set `reportOnFailure: true` in your vite config as specified above
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
