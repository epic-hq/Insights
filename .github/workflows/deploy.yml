name: Build & Deploy (Remix + Trigger.dev)

on:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "docs/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

jobs:
  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip deploy]') }}
    runs-on: ubuntu-latest
    concurrency:
      group: production-deploy
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24.3.0
          cache: pnpm

      - name: Enable pnpm via corepack
        run: |
          set -euo pipefail
          corepack enable
          PNPM_VERSION="$(node -p "const pm = require('./package.json').packageManager ?? ''; const match = pm.match(/^pnpm@(.*)$/); if (!match) { throw new Error('packageManager is not pnpm'); } match[1].split('+')[0]")"
          corepack use "pnpm@${PNPM_VERSION}"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      # --------------------------
      # 1. Build Remix/Vite app
      # --------------------------
      - name: Build app
        run: |
          pnpm exec dotenvx run -f .env.production -- pnpm run build
        env:
          DOTENVX_KEY: ${{ secrets.DOTENVX_KEY }}
          DOTENV_PRIVATE_KEY_PRODUCTION: ${{ secrets.DOTENV_PRIVATE_KEY_PRODUCTION }}

      # --------------------------
      # 2. Deploy frontend
      # --------------------------
      # ðŸ‘‰ Option A: Fly.io (change as needed)
      - name: Deploy to Fly.io
        if: success()
        run: |
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # ðŸ‘‰ Option B: Vercel
      # - name: Deploy to Vercel
      #   run: |
      #     npx vercel deploy --prod --yes
      #   env:
      #     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # --------------------------
      # 3. Deploy Trigger.dev Cloud
      # --------------------------
      - name: Deploy Trigger.dev Cloud
        run: |
          pnpm exec dotenvx run -f .env.production -- pnpm dlx trigger.dev@latest deploy
        env:
          DOTENVX_KEY: ${{ secrets.DOTENVX_KEY }}
          DOTENV_PRIVATE_KEY_PRODUCTION: ${{ secrets.DOTENV_PRIVATE_KEY_PRODUCTION }}
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}

      - name: Deployment summary
        if: success()
        run: |
          {
            echo "## ðŸš€ Deployment"
            echo ""
            echo "- Environment: production"
            echo "- Fly app: \`${{ vars.FLY_APP_NAME || 'unset' }}\`"
            echo "- Trigger.dev project: \`${{ vars.TRIGGER_PROJECT_REF || 'unset' }}\`"
            echo ""
            echo "Build & deploy completed successfully."
          } >> "$GITHUB_STEP_SUMMARY"
